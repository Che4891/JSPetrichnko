"user strict";

// Regular expression

// Pattern - шаблоны, записываеться а "/ /" например если мы ищем n в тексте то оно записываеться /n/

//const text = prompt("Some text"),
patte = /n/;
//  console.log(text.search(patte)); // тоесть в переменной text ищем букву N

// Flags - флаги, настраиваеют условия шаблона( i, g, m)
// i - это если мы хотим что то найти не зависимости от регистра

//g - это если мы пытыемся найти несколько вхождений

//m  - многострочный режим

const pattern = /n/i // тоесть тут я буду искать букву n не завися от того или она будет брльшой или маленькой

//console.log(text.match(pattern)); // поиск лучше дельть через match потому что search не работает с фдагом g тоесть если из слова ANNN мне нужно достать все буквы N я использую флаг "g" а если только первую то без флагов 

//const pass = prompt('Password');

//console.log(pass.replace(/./g, '*')); // "/./" - означает что я обоащаюсь ко всем елементам

// спец символи
// \ - екранированние пример /\./ тогла точка будет видга как точка а не как все симфолы или /\\/ - чтоб найти /

//Test

const myName = prompt('Anton');
const regexp = /n/i;
console.log(regexp.test(myName)); // ищет совпадение и возвращает true или false

// Class RE (если нужно найти только числа или только буквы)

// \d - ишем цыфры
// \w - ишем буквы
// \s - ищем пробелы

const str = 'name in string R2B2';

console.log(str.match(/\w\d\w\d/)); // Вернет R2B2

// Обратные классы (тоесть ищем НЕ буквы. НЕ числа ...)

//\D - ищем не цыфры
//\W - ищем не буквы
//\S - ищем не пробелы

